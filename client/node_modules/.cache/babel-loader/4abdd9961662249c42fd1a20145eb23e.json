{"ast":null,"code":"var _jsxFileName = \"/Users/kirisawakohei/Works/React/KashitaruApp/client/src/Component/rentPageScreen/index.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nconst RentPage = ({\n  store,\n  changeName,\n  changeAge,\n  initializeForm\n}) => {\n  const _store$form = store.form,\n        name = _store$form.name,\n        age = _store$form.age;\n\n  const handleSubmit = e => {\n    e.preventDefault(); // フォームsubmit時のデフォルトの動作を抑制\n\n    axios.post('/api/characters', {\n      name,\n      age\n    }) // キャラクターの名前、年齢からなるオブジェクトをサーバーにPOST\n    .then(response => {\n      console.log(response); // 後で行う動作確認のためのコンソール出力\n\n      store.dispatch(initializeForm()); // submit後はフォームを初期化\n    }).catch(err => {\n      console.error(new Error(err));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\u540D\\u524D:\", React.createElement(\"input\", {\n    value: name,\n    onChange: e => changeName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u5E74\\u9F62:\", React.createElement(\"input\", {\n    value: age,\n    onChange: e => changeAge(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"submit\")));\n};\n\nexport default RentPage;","map":{"version":3,"sources":["/Users/kirisawakohei/Works/React/KashitaruApp/client/src/Component/rentPageScreen/index.js"],"names":["React","axios","RentPage","store","changeName","changeAge","initializeForm","form","name","age","handleSubmit","e","preventDefault","post","then","response","console","log","dispatch","catch","err","error","Error","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA;AAAhC,CAAD,KAAsD;AAAA,sBAC/CH,KAAK,CAACI,IADyC;AAAA,QAC7DC,IAD6D,eAC7DA,IAD6D;AAAA,QACvDC,GADuD,eACvDA,GADuD;;AAGrE,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CACF;;AAEtBX,IAAAA,KAAK,CAACY,IAAN,CAAW,iBAAX,EAA8B;AAC5BL,MAAAA,IAD4B;AAE5BC,MAAAA;AAF4B,KAA9B,EAGI;AAHJ,KAIGK,IAJH,CAIQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADgB,CACO;;AACvBZ,MAAAA,KAAK,CAACe,QAAN,CAAeZ,cAAc,EAA7B,EAFgB,CAEkB;AACnC,KAPH,EAQGa,KARH,CAQSC,GAAG,IAAI;AACZJ,MAAAA,OAAO,CAACK,KAAR,CAAc,IAAIC,KAAJ,CAAUF,GAAV,CAAd;AACD,KAVH;AAWD,GAdD;;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,IAAA,KAAK,EAAEZ,IAAd;AAAoB,IAAA,QAAQ,EAAEG,CAAC,IAAIP,UAAU,CAACO,CAAC,CAACY,MAAF,CAASC,KAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,IAAA,KAAK,EAAEf,GAAd;AAAmB,IAAA,QAAQ,EAAEE,CAAC,IAAIN,SAAS,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF,CADF;AAeD,CAlCD;;AAoCA,eAAetB,QAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst RentPage = ({ store, changeName, changeAge, initializeForm }) => {\n  const { name, age } = store.form;\n\n  const handleSubmit = e => {\n    e.preventDefault()    // フォームsubmit時のデフォルトの動作を抑制\n\n    axios.post('/api/characters', {\n      name,\n      age,\n    })  // キャラクターの名前、年齢からなるオブジェクトをサーバーにPOST\n      .then(response => {\n        console.log(response)  // 後で行う動作確認のためのコンソール出力\n        store.dispatch(initializeForm())  // submit後はフォームを初期化\n      })\n      .catch(err => {\n        console.error(new Error(err))\n      })\n  }\n\n  return (\n    <div>\n      <form>\n        <label>\n          名前:\n          <input value={name} onChange={e => changeName(e.target.value)} />\n        </label>\n        <label>\n          年齢:\n          <input value={age} onChange={e => changeAge(e.target.value)} />\n        </label>\n        <button type=\"submit\">submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default RentPage;"]},"metadata":{},"sourceType":"module"}