{"ast":null,"code":"import _objectSpread from \"/Users/kirisawakohei/Works/React/KashitaruApp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { REQUEST_DATA, RECEIVE_DATA_SUCCESS, RECEIVE_DATA_FAILED } from '../Action/index';\nconst initialState = {\n  characters: {\n    isFetching: false,\n    characterArray: []\n  }\n};\n\nconst shareInformatiosReducer = (state = initialState.characters, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case RECEIVE_DATA_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        characterArray: action.characterArray\n      });\n\n    case RECEIVE_DATA_FAILED:\n      return _objectSpread({}, state, {\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default shareInformatiosReducer;","map":{"version":3,"sources":["/Users/kirisawakohei/Works/React/KashitaruApp/client/src/Reducer/charactersReducer.js"],"names":["REQUEST_DATA","RECEIVE_DATA_SUCCESS","RECEIVE_DATA_FAILED","initialState","characters","isFetching","characterArray","shareInformatiosReducer","state","action","type"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,oBAAvB,EAA6CC,mBAA7C,QAAwE,iBAAxE;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE,KADF;AAEVC,IAAAA,cAAc,EAAE;AAFN;AADO,CAArB;;AAOA,MAAMC,uBAAuB,GAAG,CAACC,KAAK,GAAGL,YAAY,CAACC,UAAtB,EAAkCK,MAAlC,KAA6C;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKJ,oBAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,cAAc,EAAEG,MAAM,CAACH;AAHzB;;AAKF,SAAKJ,mBAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,UAAU,EAAE;AAFd;;AAIF;AACE,aAAOG,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,uBAAf","sourcesContent":["import { REQUEST_DATA, RECEIVE_DATA_SUCCESS, RECEIVE_DATA_FAILED } from '../Action/index';\n\nconst initialState = {\n  characters: {\n    isFetching: false,\n    characterArray: [],\n  },\n}\n\nconst shareInformatiosReducer = (state = initialState.characters, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_DATA_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        characterArray: action.characterArray,\n      };\n    case RECEIVE_DATA_FAILED:\n      return {\n        ...state,\n        isFetching: false,\n      };\n    default:\n      return state\n  }\n}\n\nexport default shareInformatiosReducer;\n"]},"metadata":{},"sourceType":"module"}