{"ast":null,"code":"var _jsxFileName = \"/Users/kirisawakohei/Works/React/KashitaruApp/client/src/Component/rentPageScreen/index.js\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Card from '../cardComponent/index';\n\nconst RentPage = ({\n  store,\n  requestData,\n  receiveDataSuccess,\n  receiveDataFailed\n}) => {\n  const _store$characters = store.characters,\n        isFetching = _store$characters.isFetching,\n        characterArray = _store$characters.characterArray;\n  console.log(characterArray);\n\n  const handleFetchData = () => {\n    requestData(); // axios.get()を呼ぶ前にisFetchingをtrueにしておく\n\n    axios.get('/api/share').then(response => {\n      // データ受け取りに成功した場合\n      const _characterArray = response.data;\n      receiveDataSuccess(_characterArray); // データをstoreに保存するとともにisFetchingをfalseに\n    }).catch(err => {\n      // データ受け取りに失敗した場合\n      console.error(new Error(err));\n      receiveDataFailed(); // isFetchingをfalseに\n    });\n  };\n\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, isFetching // isFetchingの値で分岐\n  ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Now Loading...\") // データをFetch中ならばローディングアイコンを表示\n  : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, characterArray.map(character => React.createElement(\"li\", {\n    key: character._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\".concat(character.productName, \" \").concat(character.companyName, \" \").concat(character.Name, \" \").concat(character.mailAddress, \" \").concat(character.companyAddress, \" \").concat(character.comment)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))));\n};\n\nexport default RentPage;","map":{"version":3,"sources":["/Users/kirisawakohei/Works/React/KashitaruApp/client/src/Component/rentPageScreen/index.js"],"names":["React","useEffect","axios","Card","RentPage","store","requestData","receiveDataSuccess","receiveDataFailed","characters","isFetching","characterArray","console","log","handleFetchData","get","then","response","_characterArray","data","catch","err","error","Error","map","character","_id","productName","companyName","Name","mailAddress","companyAddress","comment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA,kBAAtB;AAA0CC,EAAAA;AAA1C,CAAD,KAAmE;AAAA,4BAC3CH,KAAK,CAACI,UADqC;AAAA,QAC1EC,UAD0E,qBAC1EA,UAD0E;AAAA,QAC9DC,cAD8D,qBAC9DA,cAD8D;AAElFC,EAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;;AAEA,QAAMG,eAAe,GAAG,MAAM;AAC5BR,IAAAA,WAAW,GADiB,CACZ;;AAChBJ,IAAAA,KAAK,CAACa,GAAN,CAAU,YAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAAG;AACnB,YAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAjC;AACAZ,MAAAA,kBAAkB,CAACW,eAAD,CAAlB,CAFgB,CAEwB;AACzC,KAJH,EAKGE,KALH,CAKSC,GAAG,IAAI;AAAG;AACfT,MAAAA,OAAO,CAACU,KAAR,CAAc,IAAIC,KAAJ,CAAUF,GAAV,CAAd;AACAb,MAAAA,iBAAiB,GAFL,CAEU;AACvB,KARH;AASD,GAXD;;AAaAP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,UAAU,CAAE;AAAF,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADM,CACmB;AADnB,IAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,cAAc,CAACa,GAAf,CAAmBC,SAAS,IAC3B;AAAI,IAAA,GAAG,EAAEA,SAAS,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMD,SAAS,CAACE,WADhB,cAC+BF,SAAS,CAACG,WADzC,cACwDH,SAAS,CAACI,IADlE,cAC0EJ,SAAS,CAACK,WADpF,cACmGL,SAAS,CAACM,cAD7G,cAC+HN,SAAS,CAACO,OADzI,EADD,CADH,CADA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CARA,CAJR,CADF;AAoBD,CAzCD;;AA2CA,eAAe5B,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Card from '../cardComponent/index';\n\nconst RentPage = ({ store, requestData, receiveDataSuccess, receiveDataFailed }) => {\n  const { isFetching, characterArray } = store.characters;\n  console.log(characterArray);\n\n  const handleFetchData = () => {\n    requestData();  // axios.get()を呼ぶ前にisFetchingをtrueにしておく\n    axios.get('/api/share')\n      .then(response => {  // データ受け取りに成功した場合\n        const _characterArray = response.data;\n        receiveDataSuccess(_characterArray);    // データをstoreに保存するとともにisFetchingをfalseに\n      })\n      .catch(err => {  // データ受け取りに失敗した場合\n        console.error(new Error(err))\n        receiveDataFailed();  // isFetchingをfalseに\n      })\n  }\n\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n\n  return (\n    <div>\n      {\n        isFetching  // isFetchingの値で分岐\n          ? <h2>Now Loading...</h2>  // データをFetch中ならばローディングアイコンを表示\n          : <div>\n            <ul>\n              {characterArray.map(character => (\n                <li key={character._id}>\n                  {`${character.productName} ${character.companyName} ${character.Name} ${character.mailAddress} ${character.companyAddress} ${character.comment}`}\n                </li>\n              ))}\n            </ul>\n            <div>\n            <Card />\n            </div>\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default RentPage;\n"]},"metadata":{},"sourceType":"module"}